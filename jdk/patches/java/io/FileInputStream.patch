--- src.orig/java/io/FileInputStream.java	2013-01-04 14:04:02.000000000 -0500
+++ src/java/io/FileInputStream.java	2018-05-13 17:45:35.000000000 -0400
@@ -56,13 +56,8 @@
     private final Object closeLock = new Object();
     private volatile boolean closed = false;

-    private static final ThreadLocal<Boolean> runningFinalize =
-        new ThreadLocal<>();
-
+    // Modified for PolyLLVM.
     private static boolean isRunningFinalize() {
-        Boolean val;
-        if ((val = runningFinalize.get()) != null)
-            return val.booleanValue();
         return false;
     }

@@ -397,12 +392,8 @@
              * stream is still using it. If the user directly invokes
              * close() then the FileDescriptor is also released.
              */
-            runningFinalize.set(Boolean.TRUE);
-            try {
-                close();
-            } finally {
-                runningFinalize.set(Boolean.FALSE);
-            }
+            // Modified for PolyLLVM.
+            close();
         }
     }
 }
